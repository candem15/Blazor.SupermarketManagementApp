@page "/addproduct"
@inject NavigationManager _navigationManager
@inject CsLibrary.UseCases.IAddProductUseCase _addProductUseCase
@inject CsLibrary.UseCases.IViewCategoriesUseCase _viewCategoriesUseCase

<h3>Add Product</h3>

@if (product is not null)
{
    <EditForm  Model="product" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="category">Category</label>
            <select class="form-control" aria-label="Default select example" id="category" @bind="product.CategoryId" >
                <option value="" disabled selected>Select your category</option>
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="name">Product Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"> </InputText>
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control"> </InputNumber>
        </div>

        <div class="form-group">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control"> </InputNumber>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="submit" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}
<br />

@code {
    private Product product;
    private IEnumerable<Category> categories;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        product = new Product();
        categories = _viewCategoriesUseCase.Execute();
    }
    private void OnValidSubmit()
    {
        _addProductUseCase.Execute(product);
        _navigationManager.NavigateTo("/products");
    }
    private void OnCancel()
    {
        _navigationManager.NavigateTo("/products");
    }
}