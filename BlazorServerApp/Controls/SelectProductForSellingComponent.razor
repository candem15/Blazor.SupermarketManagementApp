@inject CsLibrary.UseCases.IViewCategoriesUseCase _viewCategoriesUseCase
@inject CsLibrary.UseCases.IViewProductsByCategoryId _viewProductsByCategoryId

<h3></h3>
<div class="form-group">
    <label for="category">Category</label>
    <select class="form-control" aria-label="Default select example" id="category" @bind="SelectedCategoryId">
        <option value="" disabled selected>Select your category</option>
        @foreach (var category in categories)
        {
            <option value="@category.CategoryId">@category.Name</option>
        }
    </select>
</div>
@if (productsInCategory != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity Left</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in productsInCategory)
            {
                <tr @onclick="@(() => OnSelectProduct(product))" style="@(product.ProductId == selectedProductId?"background-color:beige; cursor:pointer;":"cursor:pointer")">
                    <td>
                        @product.Name
                    </td>
                    <td>
                        @product.Quantity
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private IEnumerable<Product> productsInCategory;
    private Guid selectedProductId;
    [Parameter]
    public EventCallback<Product> OnProductSelected { get; set; }

    private Guid selectedCategoryId;
    private Guid SelectedCategoryId
    {
        get
        {
            return selectedCategoryId;
        }
        set
        {
            selectedCategoryId = value;
            productsInCategory = _viewProductsByCategoryId.Execute(value);
            OnSelectProduct(null);
            StateHasChanged();
        }
    }

    private IEnumerable<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = _viewCategoriesUseCase.Execute();
    }

    private void OnSelectProduct(Product product)
    {
        OnProductSelected.InvokeAsync(product);
        if(product!=null)
        selectedProductId = product.ProductId;
    }
}